{"mappings":"C,A,WOAA,SAAS,EAAqB,CAAG,CAAE,CAAG,EAC9B,CAAA,AAAO,MAAP,GAAe,EAAM,EAAI,MAAM,AAAN,GAAQ,CAAA,EAAM,EAAI,MAAM,AAAN,EAE/C,IAAK,IAAI,EAAI,EAAG,EAAO,AAAI,MAAM,GAAM,EAAI,EAAK,IAAK,CAAI,CAAC,EAAE,CAAG,CAAG,CAAC,EAAE,CAErE,OAAO,CACX,CFDA,SAAS,EAAqB,CAAG,EAC7B,OAAO,ACJX,SAA8B,CAAG,EAC7B,GAAI,MAAM,OAAO,CAAC,GAAM,OAAO,AAAA,EAAqB,EACxD,EDEgC,IAAQ,AGNxC,SAA4B,CAAI,EAC5B,GAAI,AAAkB,aAAlB,OAAO,QAA0B,AAAyB,MAAzB,CAAI,CAAC,OAAO,QAAQ,CAAC,EAAY,AAAsB,MAAtB,CAAI,CAAC,aAAa,CACpF,OAAO,MAAM,IAAI,CAAC,EAE1B,EHE2D,IAAQ,AKJnE,SAAwC,CAAC,CAAE,CAAM,EAC7C,GAAK,GACL,GAAI,AAAa,UAAb,OAAO,EAAgB,OAAO,AAAA,EAAqB,EAFhB,KAAA,GAIvC,IAAI,EAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,EAAG,IAGnD,GADU,WAAN,GAAkB,EAAE,WAAW,EAAE,CAAA,EAAI,EAAE,WAAW,CAAC,IAAI,AAAJ,EACnD,AAAM,QAAN,GAAe,AAAM,QAAN,EAAa,OAAO,MAAM,IAAI,CAAC,GAClD,GAAI,AAAM,cAAN,GAAqB,2CAA2C,IAAI,CAAC,GAAI,OAAO,AAAA,EAAqB,EARlE,KAAA,GAS3C,ELLkG,IAAQ,AIN1G,WACI,MAAM,AAAI,UAAU,uIACxB,GJKA,CJJA,IAAM,EAAO,GCDb,CAAA,eESoC,EFT9B,SAAA,IAEF,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAe,CACb,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,EAPC,ACFN,SAA2B,CAAQ,CAAE,CAAW,EAC5C,GAAI,CAAE,CAAA,aAAoB,CAAA,EAAc,MAAM,AAAI,UAAU,oCAChE,EDAM,IAAA,CAAA,GASF,IAAI,CAAC,YAAY,CAAG,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,IAC9C,IAAI,CAAC,KAAK,CAAG,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,IAAI,CAAC,YAAY,GACxD,IAAI,CAAC,MAAM,CAAG,OACd,IAAI,CAAC,KAAK,CAAG,C,CAZX,OES8B,EFT9B,C,CAeJ,IAAA,QAAA,MAAA,WACE,IAAI,CAAC,MAAM,CAAG,UACd,IAAI,CAAC,cAAc,GACnB,IAAI,CAAC,cAAc,GACnB,IAAI,CAAC,QAAQ,EACf,C,E,CAEA,IAAA,UAAA,MAAA,WACE,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,KAAK,CAAG,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,IAAI,CAAC,YAAY,GACxD,IAAI,CAAC,MAAM,CAAG,OACd,IAAI,CAAC,QAAQ,EACf,C,E,CAEA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAEA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAEA,IAAA,YAAA,MAAA,WACE,OAAO,IAAI,CAAC,MAAM,AACpB,C,E,CAEA,IAAA,WAAA,MAAA,WACE,IAAI,CAAC,IAAI,CAAC,OACZ,C,E,CAEA,IAAA,YAAA,MAAA,WACE,IAAI,CAAC,IAAI,CAAC,QACZ,C,E,CAEA,IAAA,SAAA,MAAA,WACE,IAAI,CAAC,IAAI,CAAC,KACZ,C,E,CAEA,IAAA,WAAA,MAAA,WACE,IAAI,CAAC,IAAI,CAAC,OACZ,C,E,CAEA,IAAA,OAAA,MAAA,SAAK,CAAS,EACQ,YAAhB,IAAI,CAAC,MAAM,EAAmB,IAAI,CAAC,YAAY,CAAC,KAIhD,CAAA,AAAc,OAAd,GAAsB,AAAc,SAAd,CAAc,GACtC,CAAA,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAA,EAE7C,IAAI,CAAC,KAAK,CAAC,GACX,IAAI,CAAC,KAAK,CAAC,GACX,IAAI,CAAC,KAAK,CAAC,GAEP,CAAA,AAAc,OAAd,GAAsB,AAAc,SAAd,CAAc,GACtC,CAAA,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,EAD/C,EAGA,IAAI,CAAC,cAAc,GACnB,IAAI,CAAC,eAAe,GACpB,IAAI,CAAC,QAAQ,GACf,C,E,CAEA,IAAA,kBAAA,MAAA,W,I,E,I,CACE,GAAI,CAAC,IAAI,CAAC,OAAO,GAAI,CACnB,IAAI,CAAC,MAAM,CAAG,OAEd,MACF,CAEA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAC,CAApB,EACM,EAAI,IAAI,CAAC,SAAC,CAAd,EAAuB,OAAA,AAAS,OAAT,CACrB,IAAA,CAAA,EAAK,MAAM,CAAG,KAAd,CAEJ,EACF,C,E,CAEA,IAAA,UAAA,MAAA,WACE,OACE,IAAI,CAAC,YAAY,CAAC,OAClB,IAAI,CAAC,YAAY,CAAC,SAClB,IAAI,CAAC,YAAY,CAAC,SAClB,IAAI,CAAC,YAAY,CAAC,QAEtB,C,E,CAEA,IAAA,eAAA,MAAA,SAAa,CAAS,EACpB,IAAM,EACJ,AAAc,OAAd,GAAsB,AAAc,SAAd,EAClB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAC9B,IAAI,CAAC,KAAK,CAEX,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,IAAK,IADI,EAAN,EAAA,KAAA,CACM,EAAI,EAAG,EAAI,EAAI,MAAM,CAAG,EAAG,IAClC,GAAI,AAAc,SAAd,GAAwB,AAAc,UAAd,EAC1B,CAAA,GACE,AAAY,IAAZ,CAAI,CAAC,EAAE,EAAU,AAAe,IAAf,CAAG,CAAC,EAAI,EAAE,EAC1B,AAAW,IAAX,CAAG,CAAC,EAAE,EAAU,CAAG,CAAC,EAAE,GAAK,CAAG,CAAC,EAAI,EAAE,CAEtC,MAAO,CAAA,CAJT,MAMK,GAAI,CAAA,AAAc,OAAd,GAAsB,AAAc,SAAd,CAAc,GAE3C,CAAA,AAAgB,IAAhB,CAAI,CAAC,EAAI,EAAE,EAAU,AAAW,IAAX,CAAG,CAAC,EAAE,EAC1B,AAAe,IAAf,CAAG,CAAC,EAAI,EAAE,EAAU,CAAG,CAAC,EAAI,EAAE,GAAK,CAAG,CAAC,EAAE,AAAF,EAExC,MAAO,CAAA,C,C,M,E,CAdV,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAoBL,MAAO,CAAA,CACT,C,E,CAEA,IAAA,QAAA,MAAA,SAAM,CAAS,EACb,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAA7B,EAGE,IAFA,IAAM,EAAe,EAAI,MAAM,CAAC,SAAC,CAAjC,EAA0C,OAAA,AAAS,IAAT,C,GAEnC,EAAa,MAAM,CAAG,EAAI,MAAM,EACjC,AAAc,SAAd,GAAwB,AAAc,OAAd,EAC1B,EAAa,IAAI,CAAC,GAElB,EAAa,OAAO,CAAC,GAIzB,OAAO,CACT,EACF,C,E,CAEA,IAAA,QAAA,MAAA,SAAM,CAAS,E,I,E,I,CACP,EAAe,AAAc,UAAd,GAAyB,AAAc,SAAd,EAE9C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAC,CAApB,EACE,IACE,IAAI,EAAI,EAAe,EAAI,MAAM,CAAG,EAAI,EACxC,EAAe,GAAK,EAAI,EAAI,EAAI,MAAM,CACtC,EAAe,IAAM,IACrB,CACA,IAAM,EAAQ,EAAe,EAAI,EAAI,EAAI,CAErC,CAAA,CAAG,CAAC,EAAE,GAAK,CAAG,CAAC,EAAM,GACvB,CAAG,CAAC,EAAE,EAAI,EACV,CAAG,CAAC,EAAM,CAAG,EACb,EAAK,KAAK,EAAI,CAAG,CAAC,EAAE,CAExB,CACF,EACF,C,E,CAEA,IAAA,iBAAA,MAAA,SAAe,CAAM,EAGnB,IAAK,IAHgB,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CACf,EAAS,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAEtB,EAAM,EAAG,EAAM,EAAO,MAAM,CAAE,IACrC,IAAK,IAAI,EAAM,EAAG,EAAM,EAAO,MAAM,CAAE,IAChC,EAGH,CAAM,CAAC,EAAI,CAAC,EAAI,CAAG,CAAM,CAAC,EAAI,CAAC,EAAI,CAFnC,CAAM,CAAC,EAAI,CAAC,EAAI,CAAG,CAAM,CAAC,EAAI,CAAC,EAAI,CAOzC,OAAO,CACT,C,E,CAEA,IAAA,WAAA,MAAA,W,I,E,I,AAAS,CAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CAGN,AAAA,EAFY,SAAS,gBAAgB,CAAC,eAE7B,OAAO,CAAC,SAAC,CAAA,CAAK,CAAvB,EACE,AAAA,EAAG,EAAI,KAAK,EAAE,OAAO,CAAC,SAAC,CAAA,CAAM,CAA7B,EACC,IAAM,EAAY,EAAK,KAAK,CAAC,EAAS,CAAC,EAAY,AAEnD,CAAA,EAAK,WAAW,CAAG,AAAc,IAAd,EAAkB,GAAK,EAC1C,EAAK,SAAS,CAAG,0BAAoC,MAAA,CAAV,EAC7C,EACF,EACF,C,E,CAEA,IAAA,iBAAA,MAAA,WACE,IAAM,EAAa,EAAE,CAUrB,GARA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAC,CAAA,CAAM,CAA1B,EACE,EAAK,OAAO,CAAC,SAAC,CAAA,CAAM,CAApB,EACe,IAAT,GACF,EAAW,IAAI,CAAC,CAAE,IAAK,EAAU,IAAK,CAAY,EAEtD,EACF,GAEK,EAAW,MAAM,EAItB,IAAM,EAAc,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAW,MAAM,EAC3C,EAAA,CAAU,CAAC,EAAY,CAApC,EAAa,EAAb,GAAA,CAAK,EAAQ,EAAR,GAAb,CACM,EAAW,AAAgB,GAAhB,KAAK,MAAM,GAAW,EAAI,CAE3C,CAAA,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,CAAG,EACzB,C,E,CE5MkB,AAZpB,SAA2B,CAAM,CAAE,CAAK,EACpC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACnC,IAAI,EAAa,CAAK,CAAC,EAAE,AACzB,CAAA,EAAW,UAAU,CAAG,EAAW,UAAU,EAAI,CAAA,EACjD,EAAW,YAAY,CAAG,CAAA,EAEtB,UAAW,GAAY,CAAA,EAAW,QAAQ,CAAG,CAAA,CAAjD,EAEA,OAAO,cAAc,CAAC,EAAQ,EAAW,GAAG,CAAE,EAClD,CACJ,EAEsC,AFVhC,EEU4C,SAAS,CAAE,GFVvD,C,G,EDGA,EAAa,SAAS,aAAa,CAAC,WACpC,EAAY,SAAS,aAAa,CAAC,eA0BzC,EAAW,gBAAgB,CAAC,QAxBF,WACxB,IAAM,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAc,SAAS,aAAa,CAAC,iBACrC,EAAa,SAAS,aAAa,CAAC,gBAEtC,EAAW,SAAS,CAAC,QAAQ,CAAC,UAChC,EAAK,KAAK,GACV,EAAa,MAAM,CAAG,CAAA,EACtB,EAAW,WAAW,CAAG,UACzB,EAAW,SAAS,CAAC,MAAM,CAAC,SAC5B,EAAW,SAAS,CAAC,GAAG,CAAC,aAEzB,EAAK,OAAO,GACZ,EAAU,WAAW,CAAG,IACxB,EAAW,WAAW,CAAG,QACzB,EAAW,SAAS,CAAC,MAAM,CAAC,WAC5B,EAAW,SAAS,CAAC,GAAG,CAAC,SAEzB,EAAa,MAAM,CAAG,CAAA,EACtB,EAAY,SAAS,CAAC,GAAG,CAAC,UAC1B,EAAW,SAAS,CAAC,GAAG,CAAC,UAE7B,GAIA,SAAS,gBAAgB,CAAC,UAAW,SAAC,CAAtC,EACM,AAAU,cAAV,EAAE,GAAG,CACP,EAAK,QAAQ,GACJ,AAAU,eAAV,EAAE,GAAG,CACd,EAAK,SAAS,GACL,AAAU,YAAV,EAAE,GAAG,CACd,EAAK,MAAM,GACQ,cAAV,EAAE,GAAG,EACd,EAAK,QAAQ,GAGf,EAAU,WAAW,CAAG,EAAK,QAAQ,GAErC,IAAM,EAAc,SAAS,aAAa,CAAC,iBACrC,EAAa,SAAS,aAAa,CAAC,eAEtC,AAAqB,CAAA,QAArB,EAAK,SAAS,IAChB,EAAW,SAAS,CAAC,MAAM,CAAC,UAC5B,EAAY,SAAS,CAAC,GAAG,CAAC,WACI,SAArB,EAAK,SAAS,KACvB,EAAY,SAAS,CAAC,MAAM,CAAC,UAC7B,EAAW,SAAS,CAAC,GAAG,CAAC,UAE7B,E","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.initialState = JSON.parse(JSON.stringify(initialState));\n        this.board = JSON.parse(JSON.stringify(this.initialState));\n        this.status = \"idle\";\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                this.addRandomTiles();\n                this.addRandomTiles();\n                this.updateUI();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.score = 0;\n                this.board = JSON.parse(JSON.stringify(this.initialState));\n                this.status = \"idle\";\n                this.updateUI();\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.move(\"left\");\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.move(\"right\");\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.move(\"up\");\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.move(\"down\");\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(direction) {\n                if (this.status !== \"playing\" || !this.checkForMove(direction)) return;\n                if (direction === \"up\" || direction === \"down\") this.board = this.transposeBoard(this.board);\n                this.slide(direction);\n                this.merge(direction);\n                this.slide(direction);\n                if (direction === \"up\" || direction === \"down\") this.board = this.transposeBoard(this.board, true);\n                this.addRandomTiles();\n                this.checkGameStatus();\n                this.updateUI();\n            }\n        },\n        {\n            key: \"checkGameStatus\",\n            value: function checkGameStatus() {\n                var _this = this;\n                if (!this.canMove()) {\n                    this.status = \"lose\";\n                    return;\n                }\n                this.board.forEach(function(row) {\n                    if (row.some(function(cell) {\n                        return cell === 2048;\n                    })) _this.status = \"win\";\n                });\n            }\n        },\n        {\n            key: \"canMove\",\n            value: function canMove() {\n                return this.checkForMove(\"up\") || this.checkForMove(\"down\") || this.checkForMove(\"left\") || this.checkForMove(\"right\");\n            }\n        },\n        {\n            key: \"checkForMove\",\n            value: function checkForMove(direction) {\n                var boardToCheck = direction === \"up\" || direction === \"down\" ? this.transposeBoard(this.board) : this.board;\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = boardToCheck[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        for(var i = 0; i < row.length - 1; i++){\n                            if (direction === \"down\" || direction === \"right\") {\n                                if (row[i] !== 0 && row[i + 1] === 0 || row[i] !== 0 && row[i] === row[i + 1]) return true;\n                            } else if (direction === \"up\" || direction === \"left\") {\n                                if (row[i + 1] !== 0 && row[i] === 0 || row[i + 1] !== 0 && row[i + 1] === row[i]) return true;\n                            }\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return false;\n            }\n        },\n        {\n            key: \"slide\",\n            value: function slide(direction) {\n                this.board = this.board.map(function(row) {\n                    var nonZeroTiles = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(nonZeroTiles.length < row.length)if (direction === \"left\" || direction === \"up\") nonZeroTiles.push(0);\n                    else nonZeroTiles.unshift(0);\n                    return nonZeroTiles;\n                });\n            }\n        },\n        {\n            key: \"merge\",\n            value: function merge(direction) {\n                var _this = this;\n                var isReverseble = direction === \"right\" || direction === \"down\";\n                this.board.forEach(function(row) {\n                    for(var i = isReverseble ? row.length - 1 : 0; isReverseble ? i >= 0 : i < row.length; isReverseble ? i-- : i++){\n                        var nextI = isReverseble ? i - 1 : i + 1;\n                        if (row[i] === row[nextI]) {\n                            row[i] *= 2;\n                            row[nextI] = 0;\n                            _this.score += row[i];\n                        }\n                    }\n                });\n            }\n        },\n        {\n            key: \"transposeBoard\",\n            value: function transposeBoard(target) {\n                var back = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n                var result = [\n                    [],\n                    [],\n                    [],\n                    []\n                ];\n                for(var row = 0; row < target.length; row++){\n                    for(var col = 0; col < target.length; col++)if (!back) result[col][row] = target[row][col];\n                    else result[row][col] = target[col][row];\n                }\n                return result;\n            }\n        },\n        {\n            key: \"updateUI\",\n            value: function updateUI() {\n                var _this = this;\n                var forNewTile = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n                var rows = document.querySelectorAll(\".field-row\");\n                (0, $227c6742e0ff6f82$export$71511d61b312f219)(rows).forEach(function(row, rowIndex) {\n                    (0, $227c6742e0ff6f82$export$71511d61b312f219)(row.cells).forEach(function(cell, columnIndex) {\n                        var boardCell = _this.board[rowIndex][columnIndex];\n                        cell.textContent = boardCell === 0 ? \"\" : boardCell;\n                        cell.className = \"field-cell field-cell--\".concat(boardCell);\n                    });\n                });\n            }\n        },\n        {\n            key: \"addRandomTiles\",\n            value: function addRandomTiles() {\n                var emptyCells = [];\n                this.board.forEach(function(row1, rowIndex) {\n                    row1.forEach(function(cell, columnIndex) {\n                        if (cell === 0) emptyCells.push({\n                            row: rowIndex,\n                            col: columnIndex\n                        });\n                    });\n                });\n                if (!emptyCells.length) return;\n                var randomIndex = Math.floor(Math.random() * emptyCells.length);\n                var _emptyCells_randomIndex = emptyCells[randomIndex], row = _emptyCells_randomIndex.row, col = _emptyCells_randomIndex.col;\n                var newValue = Math.random() < 0.9 ? 2 : 4;\n                this.board[row][col] = newValue;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$gameButton = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$onClickGameButton = function() {\n    var startMessage = document.querySelector(\".message-start\");\n    var loseMessage = document.querySelector(\".message-lose\");\n    var winMessage = document.querySelector(\".message-win\");\n    if ($197cd56b15c33885$var$gameButton.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$game.start();\n        startMessage.hidden = true;\n        $197cd56b15c33885$var$gameButton.textContent = \"Restart\";\n        $197cd56b15c33885$var$gameButton.classList.remove(\"start\");\n        $197cd56b15c33885$var$gameButton.classList.add(\"restart\");\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$gameScore.textContent = \"0\";\n        $197cd56b15c33885$var$gameButton.textContent = \"Start\";\n        $197cd56b15c33885$var$gameButton.classList.remove(\"restart\");\n        $197cd56b15c33885$var$gameButton.classList.add(\"start\");\n        startMessage.hidden = false;\n        loseMessage.classList.add(\"hidden\");\n        winMessage.classList.add(\"hidden\");\n    }\n};\n$197cd56b15c33885$var$gameButton.addEventListener(\"click\", $197cd56b15c33885$var$onClickGameButton);\ndocument.addEventListener(\"keydown\", function(e) {\n    if (e.key === \"ArrowLeft\") $197cd56b15c33885$var$game.moveLeft();\n    else if (e.key === \"ArrowRight\") $197cd56b15c33885$var$game.moveRight();\n    else if (e.key === \"ArrowUp\") $197cd56b15c33885$var$game.moveUp();\n    else if (e.key === \"ArrowDown\") $197cd56b15c33885$var$game.moveDown();\n    $197cd56b15c33885$var$gameScore.textContent = $197cd56b15c33885$var$game.getScore();\n    var loseMessage = document.querySelector(\".message-lose\");\n    var winMessage = document.querySelector(\".message-win\");\n    if ($197cd56b15c33885$var$game.getStatus() === \"win\") {\n        winMessage.classList.remove(\"hidden\");\n        loseMessage.classList.add(\"hidden\");\n    } else if ($197cd56b15c33885$var$game.getStatus() === \"lose\") {\n        loseMessage.classList.remove(\"hidden\");\n        winMessage.classList.add(\"hidden\");\n    }\n});\n\n})();\n//# sourceMappingURL=index.b6e466e9.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst gameButton = document.querySelector('.button');\nconst gameScore = document.querySelector('.game-score');\n\nconst onClickGameButton = () => {\n  const startMessage = document.querySelector('.message-start');\n  const loseMessage = document.querySelector('.message-lose');\n  const winMessage = document.querySelector('.message-win');\n\n  if (gameButton.classList.contains('start')) {\n    game.start();\n    startMessage.hidden = true;\n    gameButton.textContent = 'Restart';\n    gameButton.classList.remove('start');\n    gameButton.classList.add('restart');\n  } else {\n    game.restart();\n    gameScore.textContent = '0';\n    gameButton.textContent = 'Start';\n    gameButton.classList.remove('restart');\n    gameButton.classList.add('start');\n\n    startMessage.hidden = false;\n    loseMessage.classList.add('hidden');\n    winMessage.classList.add('hidden');\n  }\n};\n\ngameButton.addEventListener('click', onClickGameButton);\n\ndocument.addEventListener('keydown', (e) => {\n  if (e.key === 'ArrowLeft') {\n    game.moveLeft();\n  } else if (e.key === 'ArrowRight') {\n    game.moveRight();\n  } else if (e.key === 'ArrowUp') {\n    game.moveUp();\n  } else if (e.key === 'ArrowDown') {\n    game.moveDown();\n  }\n\n  gameScore.textContent = game.getScore();\n\n  const loseMessage = document.querySelector('.message-lose');\n  const winMessage = document.querySelector('.message-win');\n\n  if (game.getStatus() === 'win') {\n    winMessage.classList.remove('hidden');\n    loseMessage.classList.add('hidden');\n  } else if (game.getStatus() === 'lose') {\n    loseMessage.classList.remove('hidden');\n    winMessage.classList.add('hidden');\n  }\n});\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = JSON.parse(JSON.stringify(initialState));\n    this.board = JSON.parse(JSON.stringify(this.initialState));\n    this.status = 'idle';\n    this.score = 0;\n  }\n\n  start() {\n    this.status = 'playing';\n    this.addRandomTiles();\n    this.addRandomTiles();\n    this.updateUI();\n  }\n\n  restart() {\n    this.score = 0;\n    this.board = JSON.parse(JSON.stringify(this.initialState));\n    this.status = 'idle';\n    this.updateUI();\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  moveLeft() {\n    this.move('left');\n  }\n\n  moveRight() {\n    this.move('right');\n  }\n\n  moveUp() {\n    this.move('up');\n  }\n\n  moveDown() {\n    this.move('down');\n  }\n\n  move(direction) {\n    if (this.status !== 'playing' || !this.checkForMove(direction)) {\n      return;\n    }\n\n    if (direction === 'up' || direction === 'down') {\n      this.board = this.transposeBoard(this.board);\n    }\n    this.slide(direction);\n    this.merge(direction);\n    this.slide(direction);\n\n    if (direction === 'up' || direction === 'down') {\n      this.board = this.transposeBoard(this.board, true);\n    }\n    this.addRandomTiles();\n    this.checkGameStatus();\n    this.updateUI();\n  }\n\n  checkGameStatus() {\n    if (!this.canMove()) {\n      this.status = 'lose';\n\n      return;\n    }\n\n    this.board.forEach((row) => {\n      if (row.some((cell) => cell === 2048)) {\n        this.status = 'win';\n      }\n    });\n  }\n\n  canMove() {\n    return (\n      this.checkForMove('up') ||\n      this.checkForMove('down') ||\n      this.checkForMove('left') ||\n      this.checkForMove('right')\n    );\n  }\n\n  checkForMove(direction) {\n    const boardToCheck =\n      direction === 'up' || direction === 'down'\n        ? this.transposeBoard(this.board)\n        : this.board;\n\n    for (const row of boardToCheck) {\n      for (let i = 0; i < row.length - 1; i++) {\n        if (direction === 'down' || direction === 'right') {\n          if (\n            (row[i] !== 0 && row[i + 1] === 0) ||\n            (row[i] !== 0 && row[i] === row[i + 1])\n          ) {\n            return true;\n          }\n        } else if (direction === 'up' || direction === 'left') {\n          if (\n            (row[i + 1] !== 0 && row[i] === 0) ||\n            (row[i + 1] !== 0 && row[i + 1] === row[i])\n          ) {\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  slide(direction) {\n    this.board = this.board.map((row) => {\n      const nonZeroTiles = row.filter((cell) => cell !== 0);\n\n      while (nonZeroTiles.length < row.length) {\n        if (direction === 'left' || direction === 'up') {\n          nonZeroTiles.push(0);\n        } else {\n          nonZeroTiles.unshift(0);\n        }\n      }\n\n      return nonZeroTiles;\n    });\n  }\n\n  merge(direction) {\n    const isReverseble = direction === 'right' || direction === 'down';\n\n    this.board.forEach((row) => {\n      for (\n        let i = isReverseble ? row.length - 1 : 0;\n        isReverseble ? i >= 0 : i < row.length;\n        isReverseble ? i-- : i++\n      ) {\n        const nextI = isReverseble ? i - 1 : i + 1;\n\n        if (row[i] === row[nextI]) {\n          row[i] *= 2;\n          row[nextI] = 0;\n          this.score += row[i];\n        }\n      }\n    });\n  }\n\n  transposeBoard(target, back = false) {\n    const result = [[], [], [], []];\n\n    for (let row = 0; row < target.length; row++) {\n      for (let col = 0; col < target.length; col++) {\n        if (!back) {\n          result[col][row] = target[row][col];\n        } else {\n          result[row][col] = target[col][row];\n        }\n      }\n    }\n\n    return result;\n  }\n\n  updateUI(forNewTile = false) {\n    const rows = document.querySelectorAll('.field-row');\n\n    [...rows].forEach((row, rowIndex) => {\n      [...row.cells].forEach((cell, columnIndex) => {\n        const boardCell = this.board[rowIndex][columnIndex];\n\n        cell.textContent = boardCell === 0 ? '' : boardCell;\n        cell.className = `field-cell field-cell--${boardCell}`;\n      });\n    });\n  }\n\n  addRandomTiles() {\n    const emptyCells = [];\n\n    this.board.forEach((row1, rowIndex) => {\n      row1.forEach((cell, columnIndex) => {\n        if (cell === 0) {\n          emptyCells.push({ row: rowIndex, col: columnIndex });\n        }\n      });\n    });\n\n    if (!emptyCells.length) {\n      return;\n    }\n\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n    const { row, col } = emptyCells[randomIndex];\n    const newValue = Math.random() < 0.9 ? 2 : 4;\n\n    this.board[row][col] = newValue;\n  }\n}\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","JSON","parse","stringify","board","status","score","key","value","addRandomTiles","updateUI","move","direction","checkForMove","transposeBoard","slide","merge","checkGameStatus","_this","canMove","forEach","row","some","cell","boardToCheck","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","err","return","map","nonZeroTiles","filter","push","unshift","isReverseble","nextI","target","back","result","col","document","querySelectorAll","rowIndex","cells","columnIndex","boardCell","textContent","className","concat","emptyCells","row1","randomIndex","Math","floor","random","_emptyCells_randomIndex","newValue","$4fc75ccb937ab1df$var$_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$gameButton","querySelector","$197cd56b15c33885$var$gameScore","addEventListener","startMessage","loseMessage","winMessage","classList","contains","start","hidden","remove","add","restart","e","moveLeft","moveRight","moveUp","moveDown","getScore","getStatus"],"version":3,"file":"index.b6e466e9.js.map"}
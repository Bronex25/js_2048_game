{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    constructor(initialState = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ]){\n        this.initialState = JSON.parse(JSON.stringify(initialState));\n        this.board = JSON.parse(JSON.stringify(this.initialState));\n        this.status = \"idle\";\n        this.score = 0;\n    }\n    start() {\n        this.status = \"playing\";\n        this.addRandomTiles();\n        this.addRandomTiles();\n        this.updateUI();\n    }\n    restart() {\n        this.score = 0;\n        this.board = JSON.parse(JSON.stringify(this.initialState));\n        this.status = \"idle\";\n        this.updateUI();\n    }\n    getScore() {\n        return this.score;\n    }\n    getState() {\n        return this.board;\n    }\n    getStatus() {\n        return this.status;\n    }\n    moveLeft() {\n        this.move(\"left\");\n    }\n    moveRight() {\n        this.move(\"right\");\n    }\n    moveUp() {\n        this.move(\"up\");\n    }\n    moveDown() {\n        this.move(\"down\");\n    }\n    move(direction) {\n        if (this.status !== \"playing\" || !this.checkForMove(direction)) return;\n        if (direction === \"up\" || direction === \"down\") this.board = this.transposeBoard(this.board);\n        this.slide(direction);\n        this.merge(direction);\n        this.slide(direction);\n        if (direction === \"up\" || direction === \"down\") this.board = this.transposeBoard(this.board, true);\n        this.addRandomTiles();\n        this.checkGameStatus();\n        this.updateUI();\n    }\n    checkGameStatus() {\n        if (!this.canMove()) {\n            this.status = \"lose\";\n            return;\n        }\n        this.board.forEach((row)=>{\n            if (row.some((cell)=>cell === 2048)) this.status = \"win\";\n        });\n    }\n    canMove() {\n        return this.checkForMove(\"up\") || this.checkForMove(\"down\") || this.checkForMove(\"left\") || this.checkForMove(\"right\");\n    }\n    checkForMove(direction) {\n        const boardToCheck = direction === \"up\" || direction === \"down\" ? this.transposeBoard(this.board) : this.board;\n        for (const row of boardToCheck)for(let i = 0; i < row.length - 1; i++){\n            if (direction === \"down\" || direction === \"right\") {\n                if (row[i] !== 0 && row[i + 1] === 0 || row[i] !== 0 && row[i] === row[i + 1]) return true;\n            } else if (direction === \"up\" || direction === \"left\") {\n                if (row[i + 1] !== 0 && row[i] === 0 || row[i + 1] !== 0 && row[i + 1] === row[i]) return true;\n            }\n        }\n        return false;\n    }\n    slide(direction) {\n        this.board = this.board.map((row)=>{\n            const nonZeroTiles = row.filter((cell)=>cell !== 0);\n            while(nonZeroTiles.length < row.length)if (direction === \"left\" || direction === \"up\") nonZeroTiles.push(0);\n            else nonZeroTiles.unshift(0);\n            return nonZeroTiles;\n        });\n    }\n    merge(direction) {\n        const isReverseble = direction === \"right\" || direction === \"down\";\n        this.board.forEach((row)=>{\n            for(let i = isReverseble ? row.length - 1 : 0; isReverseble ? i >= 0 : i < row.length; isReverseble ? i-- : i++){\n                const nextI = isReverseble ? i - 1 : i + 1;\n                if (row[i] === row[nextI]) {\n                    row[i] *= 2;\n                    row[nextI] = 0;\n                    this.score += row[i];\n                }\n            }\n        });\n    }\n    transposeBoard(target, back = false) {\n        const result = [\n            [],\n            [],\n            [],\n            []\n        ];\n        for(let row = 0; row < target.length; row++){\n            for(let col = 0; col < target.length; col++)if (!back) result[col][row] = target[row][col];\n            else result[row][col] = target[col][row];\n        }\n        return result;\n    }\n    updateUI(forNewTile = false) {\n        const rows = document.querySelectorAll(\".field-row\");\n        [\n            ...rows\n        ].forEach((row, rowIndex)=>{\n            [\n                ...row.cells\n            ].forEach((cell, columnIndex)=>{\n                const boardCell = this.board[rowIndex][columnIndex];\n                cell.textContent = boardCell === 0 ? \"\" : boardCell;\n                cell.className = `field-cell field-cell--${boardCell}`;\n            });\n        });\n    }\n    addRandomTiles() {\n        const emptyCells = [];\n        this.board.forEach((row1, rowIndex)=>{\n            row1.forEach((cell, columnIndex)=>{\n                if (cell === 0) emptyCells.push({\n                    row: rowIndex,\n                    col: columnIndex\n                });\n            });\n        });\n        if (!emptyCells.length) return;\n        const randomIndex = Math.floor(Math.random() * emptyCells.length);\n        const { row: row, col: col } = emptyCells[randomIndex];\n        const newValue = Math.random() < 0.9 ? 2 : 4;\n        this.board[row][col] = newValue;\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\nconst $09e991522ca7e64e$var$gameButton = document.querySelector(\".button\");\nconst $09e991522ca7e64e$var$gameScore = document.querySelector(\".game-score\");\nconst $09e991522ca7e64e$var$onClickGameButton = ()=>{\n    const startMessage = document.querySelector(\".message-start\");\n    const loseMessage = document.querySelector(\".message-lose\");\n    const winMessage = document.querySelector(\".message-win\");\n    if ($09e991522ca7e64e$var$gameButton.classList.contains(\"start\")) {\n        $09e991522ca7e64e$var$game.start();\n        startMessage.hidden = true;\n        $09e991522ca7e64e$var$gameButton.textContent = \"Restart\";\n        $09e991522ca7e64e$var$gameButton.classList.remove(\"start\");\n        $09e991522ca7e64e$var$gameButton.classList.add(\"restart\");\n    } else {\n        $09e991522ca7e64e$var$game.restart();\n        $09e991522ca7e64e$var$gameScore.textContent = \"0\";\n        $09e991522ca7e64e$var$gameButton.textContent = \"Start\";\n        $09e991522ca7e64e$var$gameButton.classList.remove(\"restart\");\n        $09e991522ca7e64e$var$gameButton.classList.add(\"start\");\n        startMessage.hidden = false;\n        loseMessage.classList.add(\"hidden\");\n        winMessage.classList.add(\"hidden\");\n    }\n};\n$09e991522ca7e64e$var$gameButton.addEventListener(\"click\", $09e991522ca7e64e$var$onClickGameButton);\ndocument.addEventListener(\"keydown\", (e)=>{\n    if (e.key === \"ArrowLeft\") $09e991522ca7e64e$var$game.moveLeft();\n    else if (e.key === \"ArrowRight\") $09e991522ca7e64e$var$game.moveRight();\n    else if (e.key === \"ArrowUp\") $09e991522ca7e64e$var$game.moveUp();\n    else if (e.key === \"ArrowDown\") $09e991522ca7e64e$var$game.moveDown();\n    $09e991522ca7e64e$var$gameScore.textContent = $09e991522ca7e64e$var$game.getScore();\n    const loseMessage = document.querySelector(\".message-lose\");\n    const winMessage = document.querySelector(\".message-win\");\n    if ($09e991522ca7e64e$var$game.getStatus() === \"win\") {\n        winMessage.classList.remove(\"hidden\");\n        loseMessage.classList.add(\"hidden\");\n    } else if ($09e991522ca7e64e$var$game.getStatus() === \"lose\") {\n        loseMessage.classList.remove(\"hidden\");\n        winMessage.classList.add(\"hidden\");\n    }\n});\n\n\n//# sourceMappingURL=index.856cee25.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst gameButton = document.querySelector('.button');\nconst gameScore = document.querySelector('.game-score');\n\nconst onClickGameButton = () => {\n  const startMessage = document.querySelector('.message-start');\n  const loseMessage = document.querySelector('.message-lose');\n  const winMessage = document.querySelector('.message-win');\n\n  if (gameButton.classList.contains('start')) {\n    game.start();\n    startMessage.hidden = true;\n    gameButton.textContent = 'Restart';\n    gameButton.classList.remove('start');\n    gameButton.classList.add('restart');\n  } else {\n    game.restart();\n    gameScore.textContent = '0';\n    gameButton.textContent = 'Start';\n    gameButton.classList.remove('restart');\n    gameButton.classList.add('start');\n\n    startMessage.hidden = false;\n    loseMessage.classList.add('hidden');\n    winMessage.classList.add('hidden');\n  }\n};\n\ngameButton.addEventListener('click', onClickGameButton);\n\ndocument.addEventListener('keydown', (e) => {\n  if (e.key === 'ArrowLeft') {\n    game.moveLeft();\n  } else if (e.key === 'ArrowRight') {\n    game.moveRight();\n  } else if (e.key === 'ArrowUp') {\n    game.moveUp();\n  } else if (e.key === 'ArrowDown') {\n    game.moveDown();\n  }\n\n  gameScore.textContent = game.getScore();\n\n  const loseMessage = document.querySelector('.message-lose');\n  const winMessage = document.querySelector('.message-win');\n\n  if (game.getStatus() === 'win') {\n    winMessage.classList.remove('hidden');\n    loseMessage.classList.add('hidden');\n  } else if (game.getStatus() === 'lose') {\n    loseMessage.classList.remove('hidden');\n    winMessage.classList.add('hidden');\n  }\n});\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = JSON.parse(JSON.stringify(initialState));\n    this.board = JSON.parse(JSON.stringify(this.initialState));\n    this.status = 'idle';\n    this.score = 0;\n  }\n\n  start() {\n    this.status = 'playing';\n    this.addRandomTiles();\n    this.addRandomTiles();\n    this.updateUI();\n  }\n\n  restart() {\n    this.score = 0;\n    this.board = JSON.parse(JSON.stringify(this.initialState));\n    this.status = 'idle';\n    this.updateUI();\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  moveLeft() {\n    this.move('left');\n  }\n\n  moveRight() {\n    this.move('right');\n  }\n\n  moveUp() {\n    this.move('up');\n  }\n\n  moveDown() {\n    this.move('down');\n  }\n\n  move(direction) {\n    if (this.status !== 'playing' || !this.checkForMove(direction)) {\n      return;\n    }\n\n    if (direction === 'up' || direction === 'down') {\n      this.board = this.transposeBoard(this.board);\n    }\n    this.slide(direction);\n    this.merge(direction);\n    this.slide(direction);\n\n    if (direction === 'up' || direction === 'down') {\n      this.board = this.transposeBoard(this.board, true);\n    }\n    this.addRandomTiles();\n    this.checkGameStatus();\n    this.updateUI();\n  }\n\n  checkGameStatus() {\n    if (!this.canMove()) {\n      this.status = 'lose';\n\n      return;\n    }\n\n    this.board.forEach((row) => {\n      if (row.some((cell) => cell === 2048)) {\n        this.status = 'win';\n      }\n    });\n  }\n\n  canMove() {\n    return (\n      this.checkForMove('up') ||\n      this.checkForMove('down') ||\n      this.checkForMove('left') ||\n      this.checkForMove('right')\n    );\n  }\n\n  checkForMove(direction) {\n    const boardToCheck =\n      direction === 'up' || direction === 'down'\n        ? this.transposeBoard(this.board)\n        : this.board;\n\n    for (const row of boardToCheck) {\n      for (let i = 0; i < row.length - 1; i++) {\n        if (direction === 'down' || direction === 'right') {\n          if (\n            (row[i] !== 0 && row[i + 1] === 0) ||\n            (row[i] !== 0 && row[i] === row[i + 1])\n          ) {\n            return true;\n          }\n        } else if (direction === 'up' || direction === 'left') {\n          if (\n            (row[i + 1] !== 0 && row[i] === 0) ||\n            (row[i + 1] !== 0 && row[i + 1] === row[i])\n          ) {\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  slide(direction) {\n    this.board = this.board.map((row) => {\n      const nonZeroTiles = row.filter((cell) => cell !== 0);\n\n      while (nonZeroTiles.length < row.length) {\n        if (direction === 'left' || direction === 'up') {\n          nonZeroTiles.push(0);\n        } else {\n          nonZeroTiles.unshift(0);\n        }\n      }\n\n      return nonZeroTiles;\n    });\n  }\n\n  merge(direction) {\n    const isReverseble = direction === 'right' || direction === 'down';\n\n    this.board.forEach((row) => {\n      for (\n        let i = isReverseble ? row.length - 1 : 0;\n        isReverseble ? i >= 0 : i < row.length;\n        isReverseble ? i-- : i++\n      ) {\n        const nextI = isReverseble ? i - 1 : i + 1;\n\n        if (row[i] === row[nextI]) {\n          row[i] *= 2;\n          row[nextI] = 0;\n          this.score += row[i];\n        }\n      }\n    });\n  }\n\n  transposeBoard(target, back = false) {\n    const result = [[], [], [], []];\n\n    for (let row = 0; row < target.length; row++) {\n      for (let col = 0; col < target.length; col++) {\n        if (!back) {\n          result[col][row] = target[row][col];\n        } else {\n          result[row][col] = target[col][row];\n        }\n      }\n    }\n\n    return result;\n  }\n\n  updateUI(forNewTile = false) {\n    const rows = document.querySelectorAll('.field-row');\n\n    [...rows].forEach((row, rowIndex) => {\n      [...row.cells].forEach((cell, columnIndex) => {\n        const boardCell = this.board[rowIndex][columnIndex];\n\n        cell.textContent = boardCell === 0 ? '' : boardCell;\n        cell.className = `field-cell field-cell--${boardCell}`;\n      });\n    });\n  }\n\n  addRandomTiles() {\n    const emptyCells = [];\n\n    this.board.forEach((row1, rowIndex) => {\n      row1.forEach((cell, columnIndex) => {\n        if (cell === 0) {\n          emptyCells.push({ row: rowIndex, col: columnIndex });\n        }\n      });\n    });\n\n    if (!emptyCells.length) {\n      return;\n    }\n\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n    const { row, col } = emptyCells[randomIndex];\n    const newValue = Math.random() < 0.9 ? 2 : 4;\n\n    this.board[row][col] = newValue;\n  }\n}\nmodule.exports = Game;\n"],"names":["$09e991522ca7e64e$var$game","constructor","initialState","JSON","parse","stringify","board","status","score","start","addRandomTiles","updateUI","restart","getScore","getState","getStatus","moveLeft","move","moveRight","moveUp","moveDown","direction","checkForMove","transposeBoard","slide","merge","checkGameStatus","canMove","forEach","row","some","cell","i","length","map","nonZeroTiles","filter","push","unshift","isReverseble","nextI","target","back","result","col","forNewTile","document","querySelectorAll","rowIndex","cells","columnIndex","boardCell","textContent","className","emptyCells","row1","randomIndex","Math","floor","random","newValue","$09e991522ca7e64e$var$gameButton","querySelector","$09e991522ca7e64e$var$gameScore","addEventListener","startMessage","loseMessage","winMessage","classList","contains","hidden","remove","add","e","key"],"version":3,"file":"index.856cee25.js.map"}